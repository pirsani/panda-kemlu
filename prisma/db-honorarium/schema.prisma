// This is your Prisma schema dokumen,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma-honorarium/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_HONORARIUM")
}

// Model for Users, Accounts, Sessions, and Verification Tokens

model Role {
  id        String     @id @default(cuid())
  name      String
  createdBy String     @map("created_by")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedBy String?    @map("updated_by")
  updatedAt DateTime?  @updatedAt @map("updated_at")
  UserRole  UserRole[]

  @@map("roles")
}

model UserRole {
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
  @@map("user_roles")
}

model User {
  id                   String          @id @default(cuid())
  name                 String?
  email                String          @unique
  password             String?
  emailVerified        DateTime?       @map("email_verified")
  image                String?
  sessions             Session[]
  unitKerjaId          String?
  unitKerja            UnitKerja?      @relation(fields: [unitKerjaId], references: [id])
  createdAt            DateTime        @default(now()) @map("created_at")
  updatedAt            DateTime        @updatedAt @map("updated_at")
  riwayatProsesCreator RiwayatProses[] @relation("riwayat_proses_creator")
  riwayatProsesUpdater RiwayatProses[] @relation("riwayat_proses_updater")
  kegiatanCreator      Kegiatan[]      @relation("kegiatan_creator")
  kegiatanUpdater      Kegiatan[]      @relation("kegiatan_updater")
  userRole             UserRole[]

  @@map("users")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model PejabatPenandatangan {
  id                Int        @id @default(autoincrement())
  nama              String
  NIP               String
  jabatan           String // enum bendahara, ppk
  tmtAwal           DateTime   @map("tmt_awal")
  tmtAkhir          DateTime   @map("tmt_akhir")
  aktif             Boolean
  createdBy         String     @map("created_by")
  createdAt         DateTime   @default(now()) @map("created_at")
  updatedBy         String?    @map("updated_by")
  updatedAt         DateTime?  @updatedAt @map("updated_at")
  kegiatanBendahara Kegiatan[] @relation("bendahara_kegiatan")
  kegiatanPPK       Kegiatan[] @relation("ppk_kegiatan")

  @@map("pejabat_penandatangan")
}

model PangkatGolongan {
  id              String            @id
  pangkat         String
  golongan        String
  ruang           String
  deskripsi       String?
  pesertaKegiatan PesertaKegiatan[]
  narasumber      Narasumber[]
  createdBy       String            @map("created_by")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedBy       String?           @map("updated_by")
  updatedAt       DateTime?         @updatedAt @map("updated_at")

  @@unique([golongan, ruang])
  @@map("pangkat_golongan")
}

model Narasumber {
  id                String           @id // id narasumber adalah NIK
  nama              String
  NIP               String?
  NPWP              String?
  jabatan           String?
  eselon            String?
  pangkatGolonganId String?          @map("pangkat_golongan_id")
  pangkatGolongan   PangkatGolongan? @relation(fields: [pangkatGolonganId], references: [id])
  email             String?
  nomorTelepon      String?          @map("nomor_telepon")
  bank              String?
  namaRekening      String?          @map("nama_rekening")
  nomorRekening     String?          @map("nomor_rekening")
  createdBy         String           @map("created_by")
  createdAt         DateTime         @default(now()) @map("created_at")
  updatedBy         String?          @map("updated_by")
  updatedAt         DateTime?        @updatedAt @map("updated_at")
  jadwal            Jadwal[]

  @@map("narasumber")
}

model SBMAcuan {
  id               String             @id
  nomorPMK         String             @unique @map("nomor_pmk")
  tmtAwal          DateTime           @map("tmt_awal")
  tmtAkhir         DateTime           @map("tmt_akhir")
  tahun            Int
  aktif            Boolean
  createdBy        String             @map("created_by")
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedBy        String?            @map("updated_by")
  updatedAt        DateTime?          @updatedAt @map("updated_at")
  sbmHonorarium    SBMHonorarium[]
  sbmUHDalamNegeri SBMUHDalamNegeri[]
  sbmUHLuarNegeri  SBMUHLuarNegeri[]
  uhDalamNegeri    UHDalamNegeri[]
  uhLuarNegeri     UHLuarNegeri[]

  @@map("sbm_acuan")
}

model SBMHonorarium {
  id         Int      @id @default(autoincrement())
  jenis      String
  tipe       String
  satuan     String
  keterangan String
  nominal    Int
  sbmAcuanId String   @map("sbm_acuan_id")
  sbmAcuan   SBMAcuan @relation(fields: [sbmAcuanId], references: [id])

  createdBy String    @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("sbm_honorarium")
}

model SBMUHDalamNegeri {
  id             Int      @id @default(autoincrement())
  provinsiId     Int      @map("provinsi_id")
  provinsi       Provinsi @relation(fields: [provinsiId], references: [id])
  satuan         String
  fullboard      Int
  fulldayHalfday String   @map("full_day_half_day")
  luarKota       Int      @map("luar_kota")
  dalamKota      Int      @map("dalam_kota")
  diklat         Int
  sbmAcuanId     String   @map("sbm_acuan_id")
  sbmAcuan       SBMAcuan @relation(fields: [sbmAcuanId], references: [id])

  createdBy String    @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("sbm_uh_dalam_negeri")
}

model SBMUHLuarNegeri {
  id           Int            @id @default(autoincrement())
  negaraId     Int            @map("negara_id")
  negara       Negara         @relation(fields: [negaraId], references: [id])
  satuan       String
  golonganA    Int            @map("golongan_a")
  golonganB    Int            @map("golongan_b")
  golonganC    Int            @map("golongan_c")
  golonganD    Int            @map("golongan_d")
  sbmAcuanId   String         @map("sbm_acuan_id")
  sbmAcuan     SBMAcuan       @relation(fields: [sbmAcuanId], references: [id])
  createdBy    String         @map("created_by")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedBy    String?        @map("updated_by")
  updatedAt    DateTime?      @updatedAt @map("updated_at")
  itinerary    Itinerary[]
  uhLuarNegeri UHLuarNegeri[]

  @@map("sbm_uh_luar_negeri")
}

model SBMUangRepresentasi {
  id        Int       @id @default(autoincrement())
  pejabat   String
  satuan    String
  luarKota  Int       @map("luar_kota")
  dalamKota Int       @map("dalam_kota")
  createdBy String    @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("sbm_uang_representasi")
}

model UnitKerja {
  id            String    @id @default(cuid())
  nama          String
  namaSingkatan String?   @map("nama_singkatan")
  aktif         Boolean   @default(true)
  createdBy     String    @map("created_by")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedBy     String?   @map("updated_by")
  updatedAt     DateTime? @updatedAt @map("updated_at")
  User          User[]

  @@map("unit_kerja")
}

// enum 0, 1, 2 as Dalam Kota, Luar Kota, Luar Negeri
enum Lokasi {
  DalamKota
  LuarKota
  LuarNegeri
}

model Kegiatan {
  id                Int                   @id @default(autoincrement())
  nama              String
  tanggalMulai      DateTime              @map("tanggal_mulai")
  tanggalSelesai    DateTime              @map("tanggal_selesai")
  lokasi            Lokasi // enum 0, 1, 2
  provinsi          String?
  keterangan        String?
  status            String
  createdBy         String                @map("created_by")
  creator           User                  @relation(fields: [createdBy], references: [id], name: "kegiatan_creator")
  createdAt         DateTime              @default(now()) @map("created_at")
  updatedBy         String?               @map("updated_by")
  updater           User?                 @relation(fields: [updatedBy], references: [id], name: "kegiatan_updater")
  updatedAt         DateTime?             @updatedAt @map("updated_at")
  bendaharaId       Int?                  @map("bendahara_id")
  bendahara         PejabatPenandatangan? @relation(fields: [bendaharaId], references: [id], name: "bendahara_kegiatan")
  ppkId             Int?                  @map("ppk_id")
  ppk               PejabatPenandatangan? @relation(fields: [ppkId], references: [id], name: "ppk_kegiatan")
  dokumenSuratTugas DokumenSuratTugas[]
  pesertaKegiatan   PesertaKegiatan[]
  itinerary         Itinerary[]
  riwayatProses     RiwayatProses[]
  kelas             Kelas[]
  dokumenKegiatan   DokumenKegiatan[]

  @@map("kegiatan")
}

model DokumenSuratTugas {
  id         Int       @id @default(autoincrement())
  nama       String
  dokumen    String
  kegiatanId Int       @map("kegiatan_id")
  kegiatan   Kegiatan  @relation(fields: [kegiatanId], references: [id])
  createdBy  String    @map("created_by")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @updatedAt @map("updated_at")

  @@map("dokumen_surat_tugas")
}

model PesertaKegiatan {
  id                              Int             @id @default(autoincrement())
  nama                            String
  NIP                             String
  pangkatGolonganId               String          @map("pangkat_golongan_id")
  pangkatGolongan                 PangkatGolongan @relation(fields: [pangkatGolonganId], references: [id])
  jabatan                         String?
  eselon                          String?
  email                           String?
  rekeningSendiri                 Boolean         @default(true) @map("rekening_sendiri")
  dokumenPeryataanRekeningBerbeda String?         @map("dokumen_peryataan_rekening_berbeda")
  bank                            String
  namaRekening                    String          @map("nama_rekening")
  nomorRekening                   String          @map("nomor_rekening")
  kegiatanId                      Int             @map("kegiatan_id")
  kegiatan                        Kegiatan        @relation(fields: [kegiatanId], references: [id])
  jumlahHari                      Int             @map("jumlah_hari")
  createdBy                       String          @map("created_by")
  createdAt                       DateTime        @default(now()) @map("created_at")
  updatedBy                       String?         @map("updated_by")
  updatedAt                       DateTime?       @updatedAt @map("updated_at")
  uhDalamNegeri                   UHDalamNegeri[]
  uhLuarNegeri                    UHLuarNegeri[]

  @@unique([kegiatanId, NIP])
  @@map("peserta_kegiatan")
}

model UHDalamNegeri {
  id                     Int             @id @default(autoincrement())
  sbmAcuanId             String          @map("sbm_acuan_id")
  sbmAcuan               SBMAcuan        @relation(fields: [sbmAcuanId], references: [id])
  pesertaKegiatanId      Int             @map("peserta_kegiatan_id")
  pesertaKegiatan        PesertaKegiatan @relation(fields: [pesertaKegiatanId], references: [id])
  jumlahHari             Int             @map("jumlah_hari")
  hFullboard             Int             @map("h_fullboard")
  hFulldayHalfday        Int             @map("h_fullday_halfday")
  hLuarKota              Int             @map("h_luar_kota")
  hDalamKota             Int             @map("h_dalam_kota")
  hDiklat                Int             @map("h_diklat")
  hTransport             Int             @map("h_transport")
  uhFullboard            Int             @map("uh_fullboard")
  uhFulldayHalfday       Int             @map("uh_fullday_halfday")
  uhLuarKota             Int             @map("uh_luar_kota")
  uhDalamKota            Int             @map("uh_dalam_kota")
  uhDiklat               Int             @map("uh_diklat")
  uhTransport            Int             @map("uh_transport")
  dokumenBuktiPembayaran String?         @map("dokumen_bukti_pembayaran")
  createdBy              String          @map("created_by")
  createdAt              DateTime        @default(now()) @map("created_at")
  updatedBy              String?         @map("updated_by")
  updatedAt              DateTime?       @updatedAt @map("updated_at")

  @@map("uh_dalam_negeri")
}

model UHLuarNegeri {
  id                     Int             @id @default(autoincrement())
  sbmAcuanId             String          @map("sbm_acuan_id")
  sbmAcuan               SBMAcuan        @relation(fields: [sbmAcuanId], references: [id])
  pesertaKegiatanId      Int             @map("peserta_kegiatan_id")
  pesertaKegiatan        PesertaKegiatan @relation(fields: [pesertaKegiatanId], references: [id])
  tanggalMulai           DateTime        @map("tanggal_mulai")
  tanggalSelesai         DateTime        @map("tanggal_selesai")
  jumlahHari             Int             @map("jumlah_hari") // harus di kasih trigger biar otomatis dihitung dari tanggal mulai dan selesai
  sbmUhLuarNegeriId      Int             @map("sbm_uh_luar_negeri_id") // akan mengacu ke id yg pencariannya berdasarkan negara dan golongan
  sbmUhLuarNegeri        SBMUHLuarNegeri @relation(fields: [sbmUhLuarNegeriId], references: [id])
  golonganUh             String          @map("golongan_uh") // enum A, B, C, D
  nominalGolonganUh      Int             @map("nominal_golongan_uh") // sesuai dengan golongan yg ada di SBMUHLuarNegeri, karena bersifat historis maka diambil dari SBMUHLuarNegeri, resiko perubahan nilai nominal golongan di SBMUHLuarNegeri harus dihandle di aplikasi
  hPerjalanan            Int             @map("h_perjalanan")
  uhPerjalanan           Int             @map("uh_perjalanan")
  hUangHarian            Int             @map("h_uang_harian")
  uhUangHarian           Int             @map("uh_uang_harian")
  hDiklat                Int             @map("h_diklat")
  uhDiklat               Int             @map("uh_diklat")
  dokumenBuktiPembayaran String?         @map("dokumen_bukti_pembayaran")
  createdBy              String          @map("created_by")
  createdAt              DateTime        @default(now()) @map("created_at")
  updatedBy              String?         @map("updated_by")
  updatedAt              DateTime?       @updatedAt @map("updated_at")

  @@map("uh_luar_negeri")
}

model Itinerary {
  id                Int             @id @default(autoincrement())
  sbmUhLuarNegeriId Int             @map("sbm_uh_luar_negeri_id")
  lokasi            SBMUHLuarNegeri @relation(fields: [sbmUhLuarNegeriId], references: [id])
  tanggalMulai      DateTime
  tanggalSelesai    DateTime
  kegiatanId        Int             @map("kegiatan_id")
  kegiatan          Kegiatan        @relation(fields: [kegiatanId], references: [id])
  createdAt         DateTime?       @default(now()) @map("created_at")
  updatedAt         DateTime?       @updatedAt @map("updated_at")

  @@map("itinerary")
}

model RiwayatProses {
  id         Int       @id @default(autoincrement())
  status     String
  keterangan String
  tglStatus  DateTime  @map("tgl_status")
  kegiatanId Int       @map("kegiatan_id")
  kegiatan   Kegiatan  @relation(fields: [kegiatanId], references: [id])
  createdBy  String    @map("created_by")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  creator    User?     @relation(fields: [createdBy], references: [id], name: "riwayat_proses_creator")
  updater    User?     @relation(fields: [updatedBy], references: [id], name: "riwayat_proses_updater")

  @@map("riwayat_proses")
}

model Kelas {
  id         Int       @id @default(autoincrement())
  nama       String
  kode       String?
  kegiatanId Int       @map("kegiatan_id")
  kegiatan   Kegiatan  @relation(fields: [kegiatanId], references: [id])
  createdBy  String    @map("created_by")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  jadwal     Jadwal[]

  @@map("kelas")
}

model Materi {
  id        Int       @id @default(autoincrement())
  kode      String?
  nama      String
  createdBy String    @map("created_by")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @updatedAt @map("updated_at")
  jadwal    Jadwal[]

  @@map("materi")
}

model Jadwal {
  id                                Int                   @id @default(autoincrement())
  materiId                          Int                   @map("materi_id")
  materi                            Materi                @relation(fields: [materiId], references: [id])
  kelasId                           Int                   @map("kelas_id")
  kelas                             Kelas                 @relation(fields: [kelasId], references: [id])
  narasumberId                      String                @map("narasumber_id")
  narasumber                        Narasumber            @relation(fields: [narasumberId], references: [id])
  tanggal                           DateTime
  jamMulai                          DateTime?             @map("jam_mulai")
  jamSelesai                        DateTime?             @map("jam_selesai")
  ruang                             String?
  jumlahJamPelajaran                Int?                  @map("jumlah_jam_pelajaran")
  dokumenUndanganNarasumber         String?               @map("dokumen_undangan_narasumber")
  dokumenKofirmasiKesediaanMengajar String?               @map("dokumen_kofirmasi_kesediaan_mengajar")
  dokumenDaftarHadir                String?               @map("dokumen_daftar_hadir")
  dokumenJadwalKegiatan             String?               @map("dokumen_jadwal_kegiatan")
  tautanMaterial                    String?               @map("tautan_material")
  createdBy                         String                @map("created_by")
  createdAt                         DateTime              @default(now()) @map("created_at")
  updatedBy                         String?               @map("updated_by")
  updatedAt                         DateTime?             @updatedAt @map("updated_at")
  nominatifHonorarium               NominatifHonorarium[]

  @@map("jadwal")
}

model JenisDokumenKegiatan {
  id              Int               @id @default(autoincrement())
  nama            String
  deskripsi       String?
  untukLangkahKe  Int               @default(0) @map("untuk_langkah_ke") // enum 0, 1, 2, 4 as setup, pengajuan, daftar nominatif, pembayaran
  untukLokasiDi   String            @default("0;1") @map("untuk_lokasi_di") // enum 0, 1, 2 as Dalam Kota, Luar Kota, Luar Negeri
  isMultiple      Boolean           @default(false) @map("is_multiple")
  createdBy       String            @map("created_by")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedBy       String?           @map("updated_by")
  updatedAt       DateTime?         @updatedAt @map("updated_at")
  dokumenKegiatan DokumenKegiatan[]

  @@map("jenis_dokumen_kegiatan")
}

model DokumenKegiatan {
  id             Int                   @id @default(autoincrement())
  kegiatanId     Int                   @map("kegiatan_id")
  kegiatan       Kegiatan              @relation(fields: [kegiatanId], references: [id])
  nama           String?
  jenisDokumenId Int?                  @map("jenis_dokumen_id")
  jenisDokumen   JenisDokumenKegiatan? @relation(fields: [jenisDokumenId], references: [id])
  dokumen        String
  createdBy      String                @map("created_by")
  createdAt      DateTime              @default(now()) @map("created_at")
  verifiedBy     String?               @map("verified_by")
  verifiedAt     DateTime?             @map("verified_at")
  updatedBy      String?               @map("updated_by")
  updatedAt      DateTime              @updatedAt @map("updated_at")

  @@map("dokumen_kegiatan")
}

model NominatifHonorarium {
  id                     Int     @id @default(autoincrement())
  jadwalId               Int     @unique @map("jadwal_id")
  jadwal                 Jadwal  @relation(fields: [jadwalId], references: [id])
  besaran                Int
  jumlah                 Int
  pajakDPP               Int     @map("pajak_dpp")
  pajakTarif             Int     @map("pajak_tarif")
  pph21                  Int     @map("pph_21")
  jumlahDiterima         Int     @map("jumlah_diterima")
  namaRekening           String? @map("nama_rekening")
  nomorRekening          String? @map("nomor_rekening")
  dokumenBuktiPembayaran String? @map("dokumen_bukti_pembayaran")

  @@map("daftar_nominatif_honorarium")
}

// berdasarkan data dari https://e-database.kemendagri.go.id/kemendagri/dataset/1121/tabel-data
model Provinsi {
  id               Int                @id @default(autoincrement())
  tahun            Int
  kode             Int
  nama             String
  namaSingkatan    String?            @map("nama_singkatan")
  aktif            Boolean            @default(true)
  createdBy        String             @default("init") @map("created_by")
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedBy        String?            @map("updated_by")
  updatedAt        DateTime?          @updatedAt @map("updated_at")
  SBMUHDalamNegeri SBMUHDalamNegeri[]

  @@map("provinsi")
}

model Negara {
  id          Int    @id @default(autoincrement())
  nama        String
  kodeAlpha2  String @map("kode_alpha_2") // ISO 3166-1 alpha-2 code
  kodeAlpha3  String @map("kode_alpha_3") // ISO 3166-1 alpha-3 code
  kodeNumeric String @map("kode_numeric") // ISO 3166-1 numeric code

  createdBy       String            @default("init") @map("created_by")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedBy       String?           @map("updated_by")
  updatedAt       DateTime?         @updatedAt @map("updated_at")
  SBMUHLuarNegeri SBMUHLuarNegeri[]

  @@map("negara")
}
